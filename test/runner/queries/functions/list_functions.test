# description: list functions test

-NAME ListCreate1
-QUERY MATCH (a:person) RETURN [a.age + 1, a.age * 2], [a.eyeSight], [a.isStudent AND a.isWorker], [a.birthdate], [a.registerTime], [a.lastJobDuration]
---- 8
[21,40]|[4.700000]|[False]|[1980-10-26]|[1976-12-23 11:21:42]|[48:24:11]
[21,40]|[4.800000]|[False]|[1950-07-23]|[2031-11-30 12:25:30]|[10 years 5 months 13:00:00.000024]
[26,50]|[4.500000]|[False]|[1980-10-26]|[1972-07-31 13:22:30.678559]|[00:18:00.024]
[31,60]|[5.100000]|[False]|[1900-01-01]|[2008-11-03 13:25:30.000526]|[10 years 5 months 13:00:00.000024]
[36,70]|[5.000000]|[False]|[1900-01-01]|[2011-08-20 11:25:30]|[3 years 2 days 13:02:00]
[41,80]|[4.900000]|[False]|[1980-10-26]|[1976-12-23 11:21:42]|[10 years 5 months 13:00:00.000024]
[46,90]|[5.000000]|[False]|[1940-06-22]|[1911-08-20 02:32:21]|[48:24:11]
[84,166]|[4.900000]|[False]|[1990-11-27]|[2023-02-21 13:25:30]|[3 years 2 days 13:02:00]

-NAME ListCreate2
-QUERY MATCH (a:person)-[:knows]->(b:person) RETURN [a.age, b.age]
---- 14
[20,25]
[20,30]
[20,35]
[20,40]
[20,45]
[30,20]
[30,35]
[30,45]
[35,20]
[35,30]
[35,45]
[45,20]
[45,30]
[45,35]

-NAME ListExtractStructuredListOfInts
-QUERY MATCH (a:person) RETURN list_extract(a.workedHours, 1)
---- 8
10
12
4
1
2
3
1
10

-NAME ListExtractStructuredListOfStrings
-QUERY MATCH (a:person) RETURN list_extract(a.usedNames, 1)
---- 8
Aida
Bobby
Carmen
Wolfeschlegelstein
Ein
Fesdwe
Grad
Ad

-NAME ListExtractStructuredListOfListOfInts
-QUERY MATCH (a:person) RETURN list_element(a.courseScoresPerTerm, 1)
---- 8
[10,8]
[8,9]
[8,10]
[7,4]
[6]
[8]
[10]
[7]

-NAME ListLenStructuredListOfInts
-QUERY MATCH (a:person) RETURN len(a.workedHours)
---- 8
2
2
2
2
1
5
1
8

-NAME ListConcatStructuredListOfInts
-QUERY MATCH (a:person) RETURN list_concat(a.workedHours, [a.age, a.gender])
---- 8
[10,5,35,1]
[12,8,30,2]
[4,5,45,1]
[1,9,20,2]
[2,20,1]
[3,4,5,6,7,25,2]
[1,40,2]
[10,11,12,3,4,5,6,7,83,2]

-NAME ListConcatIntLiteral
-QUERY MATCH (a:person) RETURN list_cat(a.workedHours, [3])
---- 8
[10,5,3]
[12,8,3]
[4,5,3]
[1,9,3]
[2,3]
[3,4,5,6,7,3]
[1,3]
[10,11,12,3,4,5,6,7,3]

-NAME ListConcatStructuredListOfStrings
-QUERY MATCH (a:person) RETURN array_concat(a.usedNames, [a.fName])
---- 8
[Aida,Alice]
[Bobby,Bob]
[Carmen,Fred,Carol]
[Wolfeschlegelstein,Daniel,Dan]
[Ein,Elizabeth]
[Fesdwe,Farooq]
[Grad,Greg]
[Ad,De,Hi,Kye,Orlan,Hubert Blaine Wolfeschlegelsteinhausenbergerdorff]

-NAME ListConcatStructuredListOfListOfInts
-QUERY MATCH (a:person) RETURN array_cat(a.courseScoresPerTerm, [[a.age, a.age], [a.gender]])
---- 8
[[10,8],[6,7,8],[35,35],[1]]
[[8,9],[9,10],[30,30],[2]]
[[8,10],[45,45],[1]]
[[7,4],[8,8],[9],[20,20],[2]]
[[6],[7],[8],[20,20],[1]]
[[8],[25,25],[2]]
[[10],[40,40],[2]]
[[7],[10],[6,7],[83,83],[2]]

-NAME ListAppendStructuredListOfInts
-QUERY MATCH (a:person) RETURN list_append(a.workedHours, a.age)
---- 8
[10,5,35]
[12,8,30]
[4,5,45]
[1,9,20]
[2,20]
[3,4,5,6,7,25]
[1,40]
[10,11,12,3,4,5,6,7,83]

-NAME ListAppendStructuredListOfStrings
-QUERY MATCH (a:person) RETURN array_append(a.usedNames, a.fName)
---- 8
[Aida,Alice]
[Bobby,Bob]
[Carmen,Fred,Carol]
[Wolfeschlegelstein,Daniel,Dan]
[Ein,Elizabeth]
[Fesdwe,Farooq]
[Grad,Greg]
[Ad,De,Hi,Kye,Orlan,Hubert Blaine Wolfeschlegelsteinhausenbergerdorff]

-NAME ListAppendStructuredListOfListOfInts
-QUERY MATCH (a:person) RETURN array_push_back(a.courseScoresPerTerm, [a.age, a.age])
---- 8
[[10,8],[6,7,8],[35,35]]
[[8,9],[9,10],[30,30]]
[[8,10],[45,45]]
[[7,4],[8,8],[9],[20,20]]
[[6],[7],[8],[20,20]]
[[8],[25,25]]
[[10],[40,40]]
[[7],[10],[6,7],[83,83]]

-NAME ListPrependStructuredListOfInts
-QUERY MATCH (a:person) RETURN list_prepend(a.age, a.workedHours)
---- 8
[35,10,5]
[30,12,8]
[45,4,5]
[20,1,9]
[20,2]
[25,3,4,5,6,7]
[40,1]
[83,10,11,12,3,4,5,6,7]

-NAME ListPrependStructuredListOfStrings
-QUERY MATCH (a:person) RETURN array_prepend(a.fName, a.usedNames)
---- 8
[Alice,Aida]
[Bob,Bobby]
[Carol,Carmen,Fred]
[Dan,Wolfeschlegelstein,Daniel]
[Elizabeth,Ein]
[Farooq,Fesdwe]
[Greg,Grad]
[Hubert Blaine Wolfeschlegelsteinhausenbergerdorff,Ad,De,Hi,Kye,Orlan]

-NAME ListPrependStructuredListOfListOfInts
-QUERY MATCH (a:person) RETURN array_push_front([a.age, a.age], a.courseScoresPerTerm)
---- 8
[[35,35],[10,8],[6,7,8]]
[[30,30],[8,9],[9,10]]
[[45,45],[8,10]]
[[20,20],[7,4],[8,8],[9]]
[[20,20],[6],[7],[8]]
[[25,25],[8]]
[[40,40],[10]]
[[83,83],[7],[10],[6,7]]

-NAME ListPositionStructuredListOfInts
-QUERY MATCH (a:person) RETURN list_position(a.workedHours, 5)
---- 8
2
0
2
0
0
3
0
6

-NAME ListPositionStructuredListOfStrings
-QUERY MATCH (a:person) RETURN array_position(a.usedNames, "Grad")
---- 8
0
0
0
0
0
0
1
0

-NAME ListPositionLiteralListOfInts
-QUERY MATCH (o:organisation) RETURN list_indexof([7, 4, 100, 6, 1, 10], o.ID)
---- 3
5
2
4

-NAME ListPositionStructuredListOfListOfInts
-QUERY MATCH (a:person) RETURN array_indexof(a.courseScoresPerTerm, [8])
---- 8
0
0
0
0
3
1
0
0

-NAME ListContainsStructuredListOfInts
-QUERY MATCH (a:person) RETURN list_contains(a.workedHours, 5)
---- 8
True
False
True
False
False
True
False
True

-NAME ListContainsStructuredListOfStrings
-QUERY MATCH (a:person) RETURN list_has(a.usedNames, "Grad")
---- 8
False
False
False
False
False
False
True
False

-NAME ListContainsStructuredListOfListOfInts
-QUERY MATCH (a:person) RETURN array_contains(a.courseScoresPerTerm, [8])
---- 8
False
False
False
False
True
True
False
False

-NAME ListContainsLiteralListOfInts
-QUERY MATCH (o:organisation) RETURN array_has([7,6,1], o.ID)
---- 3
True
False
True

-NAME ListSliceLiteralListOfInts
-QUERY MATCH (o:organisation) RETURN array_slice([1,4,7,9,10,20,15,192,-5,21,3], 3, o.ID + 3)
---- 3
[7]
[7,9,10,20]
[7,9,10,20,15,192]

-NAME ListSliceStructuredListOfInts
-QUERY MATCH (a:person) RETURN list_slice(a.workedHours, 1, 2)
---- 8
[10]
[12]
[4]
[1]
[2]
[3]
[1]
[10]

-NAME ListSliceStructuredListOfListOfInts
-QUERY MATCH (a:person) RETURN array_slice(a.usedNames, 1, 2)
---- 8
[Aida]
[Bobby]
[Carmen]
[Wolfeschlegelstein]
[Ein]
[Fesdwe]
[Grad]
[Ad]

-NAME ListSliceStructuredListOfStrings
-QUERY MATCH (a:person) RETURN list_slice(a.courseScoresPerTerm, 1, 2)
---- 8
[[10,8]]
[[8,9]]
[[8,10]]
[[7,4]]
[[6]]
[[8]]
[[10]]
[[7]]
