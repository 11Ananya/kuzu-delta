# description: string functions test

-NAME ContainsReturn
-QUERY MATCH (a:person) RETURN a.fName, a.fName CONTAINS "a" ORDER BY a.fName
---- 8
Alice|False
Bob|False
Carol|True
Dan|True
Elizabeth|True
Farooq|True
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|True

-NAME ContainsSelect
-QUERY MATCH (a:person) WHERE a.fName CONTAINS "B" RETURN a.fName
---- 2
Bob
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff

-NAME ContainsSelect2
-QUERY MATCH (a:person)-[:knows]->(b:person) WHERE NOT a.fName CONTAINS b.fName RETURN COUNT(*)
---- 1
14

-NAME StartsWithReturn1
-QUERY MATCH (a:person) RETURN a.fName, a.fName STARTS WITH "A" ORDER BY a.fName
---- 8
Alice|True
Bob|False
Carol|False
Dan|False
Elizabeth|False
Farooq|False
Greg|False
Hubert Blaine Wolfeschlegelsteinhausenbergerdorff|False

-NAME StartsWithReturn2
-QUERY MATCH (a:person) RETURN a.label1, a.label1 STARTS WITH "g" ORDER BY a.fName
---- 8
excellent|False
good|True
good|True
good|True
|
|
|
|

-NAME StartsWithSelect
-QUERY MATCH (a:person) WHERE a.fName STARTS WITH "C" RETURN a.fName
---- 1
Carol

-NAME LowerStructuredStr
-QUERY MATCH (o:organisation) RETURN lower(o.name)
---- 3
abfsuni
cswork
deswork

-NAME LowerUnstructuredStr
-QUERY MATCH (o:organisation) RETURN lower(o.unstrStr)
---- 3
  perfect
  excellent organisation   
good organisation ! 
 
-NAME UpperStructuredStr
-QUERY MATCH (o:organisation) RETURN upper(o.name)
---- 3
ABFSUNI
CSWORK
DESWORK

-NAME UpperUnstructuredStr
-QUERY MATCH (o:organisation) RETURN upper(o.unstrStr)
---- 3
  PERFECT
  EXCELLENT ORGANISATION   
GOOD ORGANISATION ! 

-NAME TrimStructuredStr
-QUERY MATCH (o:organisation) RETURN trim(o.name)
---- 3
ABFsUni
CsWork
DEsWork

-NAME TrimUnstructuredStr
-QUERY MATCH (o:organisation) RETURN trim(o.unstrStr)
---- 3
pERfECt
EXcELLENT organisation
GoOd organisation !

-NAME LtrimStructuredStr
-QUERY MATCH (o:organisation) RETURN ltrim(o.name)
---- 3
ABFsUni
CsWork
DEsWork

-NAME LtrimUnstructuredStr
-QUERY MATCH (o:organisation) RETURN ltrim(o.unstrStr)
---- 3
pERfECt
EXcELLENT organisation   
GoOd organisation ! 

-NAME RtrimStructuredStr
-QUERY MATCH (o:organisation) RETURN rtrim(o.name)
---- 3
ABFsUni
CsWork
DEsWork

-NAME RtrimUnstructuredStr
-QUERY MATCH (o:organisation) RETURN rtrim(o.unstrStr)
---- 3
  pERfECt
  EXcELLENT organisation
GoOd organisation !

-NAME ReverseStructuredStr
-QUERY MATCH (o:organisation) RETURN reverse(o.name)
---- 3
inUsFBA
kroWsC
kroWsED

-NAME ReverseUnstructuredStr
-QUERY MATCH (o:organisation) RETURN reverse(o.unstrStr)
---- 3
tCEfREp  
   noitasinagro TNELLEcXE  
 ! noitasinagro dOoG

-NAME LengthStructuredStr
-QUERY MATCH (o:organisation) RETURN length(o.name)
---- 3
7
6
7

-NAME LengthUnstructuredStr
-QUERY MATCH (o:organisation) RETURN length(o.unstrStr)
---- 3
9
27
20

-NAME RepeatStructuredStr
-QUERY MATCH (o:organisation) RETURN repeat(o.name, o.ID)
---- 3
ABFsUni
CsWorkCsWorkCsWorkCsWork
DEsWorkDEsWorkDEsWorkDEsWorkDEsWorkDEsWork

-NAME RepeatUnstructuredStr
-QUERY MATCH (o:organisation) RETURN repeat(o.unstrStr, o.ID)
---- 3
  pERfECt
  EXcELLENT organisation     EXcELLENT organisation     EXcELLENT organisation     EXcELLENT organisation   
GoOd organisation ! GoOd organisation ! GoOd organisation ! GoOd organisation ! GoOd organisation ! GoOd organisation ! 

-NAME LpadStructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN lpad(p.fName, 5, "<")
---- 8
Alice
<<Bob
Carol
<<Dan
Eliza
Faroo
<Greg
Huber

-NAME LpadStructuredStrAndStructuredInt
-QUERY MATCH (p:person) RETURN lpad(p.fName, p.ID, "<")
---- 8

Bo
Car
<<Dan
Elizabe
<<Farooq
<<<<<Greg
Hubert Bla

-NAME LpadUnstructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN lpad(p.label1, 10, "<")
---- 8
<<<<<<good
<<<<<<good
<excellent
<<<<<<good





-NAME RpadStructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN rpad(p.fName, 15, ">")
---- 8
Alice>>>>>>>>>>
Bob>>>>>>>>>>>>
Carol>>>>>>>>>>
Dan>>>>>>>>>>>>
Elizabeth>>>>>>
Farooq>>>>>>>>>
Greg>>>>>>>>>>>
Hubert Blaine W

-NAME RpadStructuredStrAndStructuredInt
-QUERY MATCH (p:person) RETURN rpad(p.fName, p.ID, "<")
---- 8

Bo
Car
Dan<<
Elizabe
Farooq<<
Greg<<<<<
Hubert Bla

-NAME RpadUnstructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN rpad(p.label1, 5, ">")
---- 8
good>
good>
excel
good>





-NAME SubStrStructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN substring(p.fName, 2, 12)
---- 8
lice
ob
arol
an
lizabeth
arooq
reg
ubert Blaine

-NAME SubStrUnstructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN substring(p.label1, 3, 2)
---- 8
od
od
ce
od





-NAME LeftPositiveIdxStructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN left(p.fName, 11)
---- 8
Alice
Bob
Carol
Dan
Elizabeth
Farooq
Greg
Hubert Blai

-NAME LeftPositiveIdxStructuredStrAndStructuredInt
-QUERY MATCH (o:organisation) RETURN left(o.name, o.ID)
---- 3
A
CsWo
DEsWor

-NAME LeftNegativeIdxStructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN left(p.fName, -3)
---- 8
Al

Ca

Elizab
Far
G
Hubert Blaine Wolfeschlegelsteinhausenbergerdo

-NAME LeftUnstructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN left(p.label1, 2)
---- 8
go
go
ex
go





-NAME RightPositiveIdxStructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN right(p.fName, 10)
---- 8
Alice
Bob
Carol
Dan
Elizabeth
Farooq
Greg
ergerdorff

-NAME RightPositiveIdxStructuredStrAndStructuredInt
-QUERY MATCH (o:organisation) RETURN right(o.name, o.ID)
---- 3
i
Work
EsWork

-NAME RightNegativeIdxStructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN right(p.fName, -2)
---- 8
ice
b
rol
n
izabeth
rooq
eg
bert Blaine Wolfeschlegelsteinhausenbergerdorff

-NAME RightUnstructuredStrAndLiteralInt
-QUERY MATCH (p:person) RETURN right(p.label1, 3)
---- 8
ood
ood
ent
ood





