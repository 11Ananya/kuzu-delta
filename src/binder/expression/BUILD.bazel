load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "base_expression",
    srcs = [
        "expression.cpp",
    ],
    hdrs = [
        "include/expression.h",
    ],
    visibility = [
        "//src/binder:__subpackages__",
        "//src/function:__subpackages__",
        "//src/planner:__subpackages__",
    ],
    deps = [
        "//src/common:expression_type",
        "//src/common/types",
    ],
)

cc_library(
    name = "expression_implementations",
    srcs = [
        "existential_subquery_expression.cpp",
        "literal_expression.cpp",
        "property_expression.cpp",
    ],
    hdrs = [
        "include/existential_subquery_expression.h",
        "include/function_expression.h",
        "include/literal_expression.h",
        "include/node_expression.h",
        "include/property_expression.h",
        "include/rel_expression.h",
    ],
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "base_expression",
        "//src/binder/query",
        "//src/common:type_utils",
        "//src/function",
    ],
)

cc_library(
    name = "node_rel_expression",  # sub expression implementations needed for query graph
    srcs = [
        "property_expression.cpp",
    ],
    hdrs = [
        "include/node_expression.h",
        "include/property_expression.h",
        "include/rel_expression.h",
    ],
    visibility = [
        "//src/binder:__subpackages__",
    ],
    deps = [
        "base_expression",
    ],
)
