load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "operators",
    srcs = [
        "physical_plan/expression_mapper.cpp",
        "physical_plan/operator/filter/filter.cpp",
        "physical_plan/operator/flatten/flatten.cpp",
        "physical_plan/operator/hash_join/hash_join_build.cpp",
        "physical_plan/operator/hash_join/hash_join_probe.cpp",
        "physical_plan/operator/projection/projection.cpp",
        "physical_plan/operator/read_list/adj_list_extend.cpp",
        "physical_plan/operator/read_list/read_list.cpp",
        "physical_plan/operator/read_list/read_rel_property_list.cpp",
        "physical_plan/operator/scan_attribute/adj_column_extend.cpp",
        "physical_plan/operator/scan_attribute/scan_attribute.cpp",
        "physical_plan/operator/scan_attribute/scan_structured_column.cpp",
        "physical_plan/operator/scan_attribute/scan_structured_property.cpp",
        "physical_plan/operator/scan_attribute/scan_unstructured_property.cpp",
        "physical_plan/operator/scan_node_id/scan_node_id.cpp",
        "physical_plan/operator/sink/result_collector.cpp",
    ],
    hdrs = [
        "include/physical_plan/expression_mapper.h",
        "include/physical_plan/operator/filter/filter.h",
        "include/physical_plan/operator/flatten/flatten.h",
        "include/physical_plan/operator/hash_join/hash_join_build.h",
        "include/physical_plan/operator/hash_join/hash_join_probe.h",
        "include/physical_plan/operator/physical_operator.h",
        "include/physical_plan/operator/projection/projection.h",
        "include/physical_plan/operator/read_list/adj_list_extend.h",
        "include/physical_plan/operator/read_list/read_list.h",
        "include/physical_plan/operator/read_list/read_rel_property_list.h",
        "include/physical_plan/operator/scan_attribute/adj_column_extend.h",
        "include/physical_plan/operator/scan_attribute/scan_attribute.h",
        "include/physical_plan/operator/scan_attribute/scan_structured_column.h",
        "include/physical_plan/operator/scan_attribute/scan_structured_property.h",
        "include/physical_plan/operator/scan_attribute/scan_unstructured_property.h",
        "include/physical_plan/operator/scan_node_id/scan_node_id.h",
        "include/physical_plan/operator/sink/result_collector.h",
        "include/physical_plan/operator/sink/sink.h",
        "include/physical_plan/operator/physical_operator_info.h",
        "include/physical_plan/query_result.h",
        "include/task_system/morsel.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "result_set",
        "memory_manager",
        "//src/common",
        "//src/expression",
        "//src/storage:graph",
        "//src/storage:lists_aux",
    ],
)

cc_library(
    name = "result_set",
    srcs = [
        "physical_plan/operator/result/result_set_iterator.cpp",
        "physical_plan/operator/result/result_set.cpp",
    ],
    hdrs = [
        "include/physical_plan/operator/result/result_set_iterator.h",
        "include/physical_plan/operator/result/result_set.h",
        "include/physical_plan/operator/result/tuple.h",
    ],
    deps = [
        "//src/common",
        "//src/storage:lists_aux",
    ],
)

cc_library(
    name = "physical_plan",
    srcs = [
        "physical_plan/plan_mapper.cpp",
    ],
    hdrs = [
        "include/physical_plan/physical_plan.h",
        "include/physical_plan/plan_mapper.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "operators",
        "//src/planner:logical_plan",
        "//src/storage:graph",
    ],
)

cc_library(
    name = "processor",
    srcs = [
        "processor.cpp",
        "task_system/task.cpp",
        "task_system/task_queue.cpp",
    ],
    hdrs = [
        "include/processor.h",
        "include/task_system/task.h",
        "include/task_system/task_queue.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "physical_plan",
        "//src/common:timer",
        "//src/storage:graph",
    ],
)

cc_library(
    name = "memory_manager",
    srcs = [
        "memory_manager.cpp",
    ],
    hdrs = [
        "include/memory_manager.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/common",
    ],
)
