load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "data_chunk",
    srcs = [
        "data_chunk/data_chunk.cpp",
    ],
    hdrs = [
        "include/data_chunk/data_chunk.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "vector",
    ],
)

cc_library(
    name = "vector",
    srcs = [
        "compression_scheme.cpp",
        "data_chunk/data_chunk_state.cpp",
        "vector/overflow_buffer.cpp",
        "vector/value_vector.cpp",
    ],
    hdrs = [
        "include/compression_scheme.h",
        "include/data_chunk/data_chunk_state.h",
        "include/vector/overflow_buffer.h",
        "include/vector/value_vector.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "expression_type",
        "memory_manager",
        "operations",
        "//src/common/types",
        "//src/storage:buffer_manager",
    ],
)

cc_library(
    name = "vector_operations",
    srcs = [
        "vector/operations/vector_arithmetic_operations.cpp",
        "vector/operations/vector_cast_operations.cpp",
    ],
    hdrs = [
        "include/vector/operations/executors/binary_operation_executor.h",
        "include/vector/operations/executors/unary_operation_executor.h",
        "include/vector/operations/vector_arithmetic_operations.h",
        "include/vector/operations/vector_cast_operations.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "operations",
        "vector",
        "//src/function/boolean/operations:boolean_operations",
    ],
)

cc_library(
    name = "operations",
    srcs = [],
    hdrs = [
        "include/operations/arithmetic_operations.h",
        "include/operations/hash_operations.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//src/common/types",
        "//src/function/string/operations:string_operations",
    ],
)

cc_library(
    name = "csv_reader",
    srcs = ["csv_reader/csv_reader.cpp"],
    hdrs = ["include/csv_reader/csv_reader.h"],
    visibility = ["//visibility:public"],
    deps = [
        "configs",
        "//src/common/types",
    ],
)

cc_library(
    name = "utils",
    srcs = [
        "assert.cpp",
        "file_utils.cpp",
        "utils.cpp",
    ],
    hdrs = [
        "include/assert.h",
        "include/exception.h",
        "include/file_utils.h",
        "include/utils.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@gabime_spdlog",
        "@martinus_robin_hood_hashing",
    ],
)

cc_library(
    name = "configs",
    hdrs = [
        "include/configs.h",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "expression_type",
    srcs = [
        "expression_type.cpp",
    ],
    hdrs = [
        "include/expression_type.h",
    ],
    visibility = ["//visibility:public"],
    deps = [],
)

cc_library(
    name = "memory_manager",
    srcs = [
        "memory_manager.cpp",
    ],
    hdrs = [
        "include/memory_manager.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "configs",
        "//src/storage:buffer_manager",
    ],
)

cc_library(
    name = "ser_deser",
    hdrs = [
        "include/ser_deser.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "utils",
    ],
)

cc_library(
    name = "timer",
    hdrs = [
        "include/timer.h",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "profiler",
    srcs = [
        "metric.cpp",
        "profiler.cpp",
    ],
    hdrs = [
        "include/metric.h",
        "include/profiler.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "timer",
    ],
)

cc_library(
    name = "task_system",
    srcs = glob([
        "task_system/*.cpp",
    ]),
    hdrs = glob([
        "include/*.h",
        "include/task_system/*.h",
    ]),
    visibility = ["//visibility:public"],
    deps = [
        "utils",
    ],
)
