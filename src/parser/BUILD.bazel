load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "parser",
    srcs = [
        "parser.cpp",
        "transformer.cpp",
    ],
    hdrs = [
        "include/parser.h",
        "include/transformer.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "antlr_parser",
        "parsed_queries",
    ],
)

cc_library(
    name = "antlr_parser",
    srcs = glob([
        "antlr_parser/*.cpp",
    ]),
    hdrs = glob([
        "include/antlr_parser/*.h",
    ]),
    deps = [
        "//src/antlr4:cypher_grammar_lib",
        "//src/common:utils",
    ],
)

cc_library(
    name = "parsed_queries",
    hdrs = glob([
        "include/queries/*.h",
    ]),
    # Parsed queries is exposed to binder
    visibility = ["//visibility:public"],
    deps = [
        "parsed_statements",
    ],
)

cc_library(
    name = "parsed_statements",
    hdrs = glob([
        "include/statements/*.h",
    ]),
    deps = [
        "graph_patterns",
        "parsed_expression",
        "//src/common:statement_type",
    ],
)

cc_library(
    name = "graph_patterns",
    hdrs = glob([
        "include/patterns/*.h",
    ]),
)

cc_library(
    name = "parsed_expression",
    hdrs = [
        "include/parsed_expression.h",
    ],
    deps = [
        "//src/common:expression_type",
    ],
)
