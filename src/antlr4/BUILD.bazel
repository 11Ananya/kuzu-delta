load("@rules_cc//cc:defs.bzl", "cc_library")

genrule(
    name = "generate_grammar",
    srcs = [
        "Cypher.g4",
        "@antlr4-complete//jar",
    ],
    outs = [
        "Cypher.interp",
        "CypherLexer.cpp",
        "CypherLexer.h",
        "CypherLexer.interp",
        "CypherLexer.tokens",
        "CypherParser.cpp",
        "CypherParser.h",
        "Cypher.tokens",
    ],
    cmd = """
    java -jar $(location @antlr4-complete//jar) -Dlanguage=Cpp -no-visitor -no-listener $(location Cypher.g4) -o $(RULEDIR) \
        && mv $(RULEDIR)/src/antlr4/Cypher.interp $(location Cypher.interp) \
        && mv $(RULEDIR)/src/antlr4/CypherLexer.cpp $(location CypherLexer.cpp) \
        && mv $(RULEDIR)/src/antlr4/CypherLexer.h $(location CypherLexer.h) \
        && mv $(RULEDIR)/src/antlr4/CypherLexer.interp $(location CypherLexer.interp) \
        && mv $(RULEDIR)/src/antlr4/CypherLexer.tokens $(location CypherLexer.tokens) \
        && mv $(RULEDIR)/src/antlr4/CypherParser.cpp $(location CypherParser.cpp) \
        && mv $(RULEDIR)/src/antlr4/CypherParser.h $(location CypherParser.h) \
        && mv $(RULEDIR)/src/antlr4/Cypher.tokens $(location Cypher.tokens) \
    """,
)

cc_library(
    name = "cypher_grammar_lib",
    srcs = [
        "CypherLexer.cpp",
        "CypherParser.cpp",
    ],
    hdrs = [
        "CypherLexer.h",
        "CypherParser.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@antlr4_runtimes//:antlr4_cpp",
    ],
)
